Reading edges 
1 1 0.3
1 3 1.9
1 2 1.8
3 3 9
3 2 8
3 1 3.2
2 1 1.1
2 2 2
2 3 0.1
Expected exception :4->1 edge does not exist
Expected exception :0->1 edge does not exist
Graph . It has 3 vertices and 9 edges
Vertex [1]
Vertex [2]
Vertex [3]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [2] weight [1.8]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [1] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [1] weight [3.2]
Edge [3] -> [2] weight [8]
Edge [3] -> [3] weight [9]
Print the graph using using vertices and successors
Edge [1] -> [1] weight [0.3]
Edge [1] -> [2] weight [1.8]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [1] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [1] weight [3.2]
Edge [3] -> [2] weight [8]
Edge [3] -> [3] weight [9]
Print the graph again using vertices and predecessors. Output is ordered by destination vertex
Edge [1] -> [1] weight [0.3]
Edge [2] -> [1] weight [1.1]
Edge [3] -> [1] weight [3.2]
Edge [1] -> [2] weight [1.8]
Edge [2] -> [2] weight [2]
Edge [3] -> [2] weight [8]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [3] weight [9]

Try some of the complex operations 

Graph Transposed. It has 3 vertices and 9 edges
Vertex [1]
Vertex [2]
Vertex [3]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [2] weight [1.1]
Edge [1] -> [3] weight [3.2]
Edge [2] -> [1] weight [1.8]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [8]
Edge [3] -> [1] weight [1.9]
Edge [3] -> [2] weight [0.1]
Edge [3] -> [3] weight [9]
Graph transposed of transposed: equal to original. It has 3 vertices and 9 edges
Vertex [1]
Vertex [2]
Vertex [3]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [2] weight [1.8]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [1] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [1] weight [3.2]
Edge [3] -> [2] weight [8]
Edge [3] -> [3] weight [9]
Graph Inverted. It has 0 vertices and 0 edges
Testing subgraph ... keeping
 vertex 1
Graph Result subraph. It has 1 vertices and 1 edges
Vertex [1]
Edge [1] -> [1] weight [0.3]

Graph Try reachability of all vertices in g. First print graph: . It has 3 vertices and 9 edges
Vertex [1]
Vertex [2]
Vertex [3]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [2] weight [1.8]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [1] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [1] weight [3.2]
Edge [3] -> [2] weight [8]
Edge [3] -> [3] weight [9]

edge 1 1 true
edge 1 2 true
edge 1 3 true
edge 2 1 true
edge 2 2 true
edge 2 3 true
edge 3 1 true
edge 3 2 true
edge 3 3 true
