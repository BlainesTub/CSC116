Reading edges 
1 1 0.3
1 3 1.9
3 4 1.8
3 3 9
2 2 8
9 2 3.2
3 1 1.1
2 2 2
2 3 0.1
5 3 3
2 7 2.4
Expected exception :10->1 edge does not exist
Expected exception :0->1 edge does not exist
Graph . It has 7 vertices and 10 edges
Vertex [1]
Vertex [2]
Vertex [3]
Vertex [4]
Vertex [5]
Vertex [7]
Vertex [9]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [2] -> [7] weight [2.4]
Edge [3] -> [1] weight [1.1]
Edge [3] -> [3] weight [9]
Edge [3] -> [4] weight [1.8]
Edge [5] -> [3] weight [3]
Edge [9] -> [2] weight [3.2]
Print the graph using using vertices and successors
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [2] -> [7] weight [2.4]
Edge [3] -> [1] weight [1.1]
Edge [3] -> [3] weight [9]
Edge [3] -> [4] weight [1.8]
Edge [5] -> [3] weight [3]
Edge [9] -> [2] weight [3.2]
Print the graph again using vertices and predecessors. Output is ordered by destination vertex
Edge [1] -> [1] weight [0.3]
Edge [3] -> [1] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [9] -> [2] weight [3.2]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [3] weight [9]
Edge [5] -> [3] weight [3]
Edge [3] -> [4] weight [1.8]
Edge [2] -> [7] weight [2.4]

Try some of the complex operations 

Graph Transposed. It has 7 vertices and 10 edges
Vertex [1]
Vertex [2]
Vertex [3]
Vertex [4]
Vertex [5]
Vertex [7]
Vertex [9]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.1]
Edge [2] -> [2] weight [2]
Edge [2] -> [9] weight [3.2]
Edge [3] -> [1] weight [1.9]
Edge [3] -> [2] weight [0.1]
Edge [3] -> [3] weight [9]
Edge [3] -> [5] weight [3]
Edge [4] -> [3] weight [1.8]
Edge [7] -> [2] weight [2.4]
Graph transposed of transposed: equal to original. It has 7 vertices and 10 edges
Vertex [1]
Vertex [2]
Vertex [3]
Vertex [4]
Vertex [5]
Vertex [7]
Vertex [9]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [2] -> [7] weight [2.4]
Edge [3] -> [1] weight [1.1]
Edge [3] -> [3] weight [9]
Edge [3] -> [4] weight [1.8]
Edge [5] -> [3] weight [3]
Edge [9] -> [2] weight [3.2]
Graph Inverted. It has 7 vertices and 39 edges
Vertex [1]
Vertex [2]
Vertex [3]
Vertex [4]
Vertex [5]
Vertex [7]
Vertex [9]
Edge [1] -> [2] weight [0]
Edge [1] -> [4] weight [0]
Edge [1] -> [5] weight [0]
Edge [1] -> [7] weight [0]
Edge [1] -> [9] weight [0]
Edge [2] -> [1] weight [0]
Edge [2] -> [4] weight [0]
Edge [2] -> [5] weight [0]
Edge [2] -> [9] weight [0]
Edge [3] -> [2] weight [0]
Edge [3] -> [5] weight [0]
Edge [3] -> [7] weight [0]
Edge [3] -> [9] weight [0]
Edge [4] -> [1] weight [0]
Edge [4] -> [2] weight [0]
Edge [4] -> [3] weight [0]
Edge [4] -> [4] weight [0]
Edge [4] -> [5] weight [0]
Edge [4] -> [7] weight [0]
Edge [4] -> [9] weight [0]
Edge [5] -> [1] weight [0]
Edge [5] -> [2] weight [0]
Edge [5] -> [4] weight [0]
Edge [5] -> [5] weight [0]
Edge [5] -> [7] weight [0]
Edge [5] -> [9] weight [0]
Edge [7] -> [1] weight [0]
Edge [7] -> [2] weight [0]
Edge [7] -> [3] weight [0]
Edge [7] -> [4] weight [0]
Edge [7] -> [5] weight [0]
Edge [7] -> [7] weight [0]
Edge [7] -> [9] weight [0]
Edge [9] -> [1] weight [0]
Edge [9] -> [3] weight [0]
Edge [9] -> [4] weight [0]
Edge [9] -> [5] weight [0]
Edge [9] -> [7] weight [0]
Edge [9] -> [9] weight [0]
Testing subgraph ... keeping
 vertex 1
 vertex 2
 vertex 3
Graph Result subraph. It has 3 vertices and 6 edges
Vertex [1]
Vertex [2]
Vertex [3]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [3] -> [1] weight [1.1]
Edge [3] -> [3] weight [9]

Graph Try reachability of all vertices in g. First print graph: . It has 7 vertices and 10 edges
Vertex [1]
Vertex [2]
Vertex [3]
Vertex [4]
Vertex [5]
Vertex [7]
Vertex [9]
Edge [1] -> [1] weight [0.3]
Edge [1] -> [3] weight [1.9]
Edge [2] -> [2] weight [2]
Edge [2] -> [3] weight [0.1]
Edge [2] -> [7] weight [2.4]
Edge [3] -> [1] weight [1.1]
Edge [3] -> [3] weight [9]
Edge [3] -> [4] weight [1.8]
Edge [5] -> [3] weight [3]
Edge [9] -> [2] weight [3.2]

edge 1 1 true
edge 1 2 false
edge 1 3 true
edge 1 4 true
edge 1 5 false
edge 1 7 false
edge 1 9 false
edge 2 1 true
edge 2 2 true
edge 2 3 true
edge 2 4 true
edge 2 5 false
edge 2 7 true
edge 2 9 false
edge 3 1 true
edge 3 2 false
edge 3 3 true
edge 3 4 true
edge 3 5 false
edge 3 7 false
edge 3 9 false
edge 4 1 false
edge 4 2 false
edge 4 3 false
edge 4 4 false
edge 4 5 false
edge 4 7 false
edge 4 9 false
edge 5 1 true
edge 5 2 false
edge 5 3 true
edge 5 4 true
edge 5 5 false
edge 5 7 false
edge 5 9 false
edge 7 1 false
edge 7 2 false
edge 7 3 false
edge 7 4 false
edge 7 5 false
edge 7 7 false
edge 7 9 false
edge 9 1 true
edge 9 2 true
edge 9 3 true
edge 9 4 true
edge 9 5 false
edge 9 7 true
edge 9 9 false
